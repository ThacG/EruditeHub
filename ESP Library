local EruditeESP = {}

EruditeESP.Settings = {
    TextColour = Color3.fromRGB(255, 255, 255),
    VisualColour = Color3.fromRGB(255, 0, 0),
    TextSize = 16,
    ShowOutline = true,
    ShowChams = true,
    ShowName = true,
    ShowDistance = true,
    ShowHealth = true,
}

local espObjects = {}

function EruditeESP:Init(settings)
    for k, v in pairs(settings) do
        if self.Settings[k] ~= nil then
            self.Settings[k] = v
        end
    end
end

local function getItemPosition(item)
    if item:IsA("BasePart") then
        return item.Position
    elseif item:IsA("Model") then
        if item.PrimaryPart then
            return item.PrimaryPart.Position
        else
            local totalPosition = Vector3.new(0, 0, 0)
            local partCount = 0
            for _, part in pairs(item:GetChildren()) do
                if part:IsA("BasePart") then
                    totalPosition = totalPosition + part.Position
                    partCount = partCount + 1
                end
            end
            if partCount > 0 then
                return totalPosition / partCount
            end
        end
    end
    return nil
end

local function applyChams(item, color)
    for _, part in pairs(item:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Material = Enum.Material.ForceField
            part.Color = color
            part.Transparency = 0.5
        end
    end
end

local function applyOutline(item, color)
    for _, part in pairs(item:GetDescendants()) do
        if part:IsA("BasePart") then
            local outlinePart = Instance.new("SelectionBox", part)
            outlinePart.Adornee = part
            outlinePart.LineThickness = 0.05
            outlinePart.Color3 = color
        end
    end
end

function EruditeESP:CreateESP(item)
    if (item:IsA("BasePart") or item:IsA("Model")) and not espObjects[item] then
        local text = Drawing.new("Text")
        text.Visible = true
        text.Color = self.Settings.TextColour
        text.Size = self.Settings.TextSize
        text.Center = true
        text.Outline = true
        text.OutlineColor = Color3.new(0, 0, 0)

        espObjects[item] = text

        local function updateText()
            if not ESPEnabled then
                text:Remove()
                espObjects[item] = nil
                return
            end

            if item and item.Parent then
                local itemPos = getItemPosition(item)
                if itemPos then
                    local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(itemPos)
                    if onScreen then
                        local character = game.Players.LocalPlayer.Character
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            local charPos = character.HumanoidRootPart.Position
                            local distance = (charPos - itemPos).Magnitude
                            local displayText = item.Name
                            if self.Settings.ShowDistance then
                                displayText = displayText .. string.format("\n%.1f studs", distance)
                            end
                            if self.Settings.ShowHealth and item:FindFirstChild("Humanoid") then
                                local health = item.Humanoid.Health
                                displayText = displayText .. string.format("\nHealth: %.1f", health)
                            end
                            text.Text = displayText
                            text.Position = Vector2.new(screenPos.X, screenPos.Y)
                            text.Visible = true

                            if self.Settings.ShowChams then
                                applyChams(item, self.Settings.VisualColour)
                            end
                            if self.Settings.ShowOutline then
                                applyOutline(item, self.Settings.VisualColour)
                            end
                        else
                            text.Visible = false
                        end
                    else
                        text.Visible = false
                    end
                else
                    text.Visible = false
                end
            else
                text:Remove()
                espObjects[item] = nil
            end
        end

        game:GetService("RunService").Heartbeat:Connect(function()
            if ESPEnabled then
                updateText()
            end
        end)
    end
end

function EruditeESP:RemoveESP(item)
    if espObjects[item] then
        espObjects[item]:Remove()
        espObjects[item] = nil
    end
end

function EruditeESP:InitializeESP(container)
    for _, item in pairs(container:GetChildren()) do
        self:CreateESP(item)
    end

    container.ChildAdded:Connect(function(item)
        self:CreateESP(item)
    end)
    container.ChildRemoved:Connect(function(item)
        self:RemoveESP(item)
    end)
end

return EruditeESP
