local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local EruditeESP = {}

EruditeESP.Settings = {
    TextColour = Color3.fromRGB(255, 255, 255),
    VisualColour = Color3.fromRGB(255, 0, 0),
    TextSize = 16,
    ShowChams = true,
    ShowName = true,
    ShowDistance = true,
    ShowHealth = true,
    ShowTracers = true,
    RemoveOnDeath = true,
    MaxDistance = 300,
    TeamColors = false,
    TeamBased = false,
}

local espObjects = {}

function EruditeESP:Init(settings)
    for k, v in pairs(settings) do
        if self.Settings[k] ~= nil then
            self.Settings[k] = v
        end
    end
end

local function applyChams(character, color)
    if not character:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = color
        highlight.OutlineColor = color
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0.5
        highlight.Parent = character
    end
end

local function removeChams(character)
    if character:FindFirstChild("Highlight") then
        character.Highlight:Destroy()
    end
end

local function createBillboardGui(text, color, size)
    local billboardGui = Instance.new("BillboardGui")
    billboardGui.Size = UDim2.new(0, size * 10, 0, size * 2)
    billboardGui.AlwaysOnTop = true
    billboardGui.StudsOffset = Vector3.new(0, 3, 0)

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundTransparency = 1
    textLabel.Text = text
    textLabel.TextColor3 = color
    textLabel.TextScaled = false
    textLabel.Font = Enum.Font.Code
    textLabel.TextSize = size
    textLabel.TextStrokeTransparency = 0.5
    textLabel.Parent = billboardGui

    return billboardGui
end

local function getDistance(position)
    local character = Players.LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        local charPos = character.HumanoidRootPart.Position
        local magnitude = (charPos - position).Magnitude
        return math.floor(magnitude * 0.28) -- Converts studs to meters and rounds down
    end
    return 0
end

local function updateESP(player)
    local character = player and player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local distance = getDistance(character.HumanoidRootPart.Position)
    if distance > EruditeESP.Settings.MaxDistance then
        if espObjects[player] then
            espObjects[player].BillboardGui.Enabled = false
            espObjects[player].Tracer.Visible = false
        end
        return
    end

    if not espObjects[player] then
        local billboardGui = createBillboardGui("", EruditeESP.Settings.TextColour, EruditeESP.Settings.TextSize)
        billboardGui.Parent = character.Head

        local tracer = Drawing.new("Line")
        tracer.Visible = false
        tracer.Color = EruditeESP.Settings.VisualColour
        tracer.Thickness = 1

        espObjects[player] = {
            BillboardGui = billboardGui,
            Tracer = tracer,
            Connection = RunService.Heartbeat:Connect(function()
                updateESP(player)
            end)
        }
    end

    local billboardGui = espObjects[player].BillboardGui
    local textLabel = billboardGui:FindFirstChildOfClass("TextLabel")

    local displayText = ""
    if EruditeESP.Settings.ShowName then
        displayText = player.Name
    end
    if EruditeESP.Settings.ShowHealth and character:FindFirstChild("Humanoid") then
        displayText = displayText .. " | " .. math.ceil(character.Humanoid.Health) .. " HP"
    end
    if EruditeESP.Settings.ShowDistance then
        displayText = displayText .. " | " .. distance .. " M"
    end

    textLabel.Text = displayText
    textLabel.TextSize = EruditeESP.Settings.TextSize
    billboardGui.Enabled = true

    if EruditeESP.Settings.ShowTracers then
        local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(character.HumanoidRootPart.Position)
        if onScreen then
            local tracer = espObjects[player].Tracer
            if Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local torsoPos = workspace.CurrentCamera:WorldToViewportPoint(Players.LocalPlayer.Character.HumanoidRootPart.Position)
                tracer.From = Vector2.new(torsoPos.X, torsoPos.Y)
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                tracer.Visible = true
            end
        else
            espObjects[player].Tracer.Visible = false
        end
    end

    if EruditeESP.Settings.ShowChams then
        applyChams(character, EruditeESP.Settings.VisualColour)
    end
end

function EruditeESP:RemoveESP(player)
    if espObjects[player] then
        espObjects[player].BillboardGui:Destroy()
        espObjects[player].Tracer:Remove()
        if espObjects[player].Connection then
            espObjects[player].Connection:Disconnect()
        end
        removeChams(player.Character)
        espObjects[player] = nil
    end
end

function EruditeESP:InitializePlayers()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            self:InitializePlayer(player)
        end
    end

    Players.PlayerAdded:Connect(function(player)
        if player ~= Players.LocalPlayer then
            self:InitializePlayer(player)
        end
    end)

    Players.PlayerRemoving:Connect(function(player)
        self:RemoveESP(player)
    end)
end

function EruditeESP:InitializePlayer(player)
    player.CharacterAdded:Connect(function(character)
        character:WaitForChild("HumanoidRootPart")
        updateESP(player)
        if self.Settings.RemoveOnDeath then
            character:WaitForChild("Humanoid").Died:Connect(function()
                self:RemoveESP(player)
            end)
        end
    end)

    if player.Character then
        updateESP(player)
        if self.Settings.RemoveOnDeath then
            player.Character:WaitForChild("Humanoid").Died:Connect(function()
                self:RemoveESP(player)
            end)
        end
    end
end

local function updateDroppedItem(item)
    if not item:IsA("BasePart") then return end

    local distance = getDistance(item.Position)
    if distance > EruditeESP.Settings.MaxDistance then
        if espObjects[item] then
            espObjects[item].BillboardGui.Enabled = false
            espObjects[item].Tracer.Visible = false
        end
        return
    end

    if not espObjects[item] then
        local billboardGui = createBillboardGui("", EruditeESP.Settings.TextColour, EruditeESP.Settings.TextSize)
        billboardGui.Parent = item

        local tracer = Drawing.new("Line")
        tracer.Visible = false
        tracer.Color = EruditeESP.Settings.VisualColour
        tracer.Thickness = 1

        espObjects[item] = {
            BillboardGui = billboardGui,
            Tracer = tracer,
            Connection = RunService.Heartbeat:Connect(function()
                updateDroppedItem(item)
            end)
        }
    end

    local billboardGui = espObjects[item].BillboardGui
    local textLabel = billboardGui:FindFirstChildOfClass("TextLabel")
    textLabel.Text = item.Name .. " | " .. distance .. " M"
    textLabel.TextSize = EruditeESP.Settings.TextSize
    billboardGui.Enabled = true

    if EruditeESP.Settings.ShowTracers then
        local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(item.Position)
        if onScreen then
            local tracer = espObjects[item].Tracer
            if Players.LocalPlayer.Character and Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local torsoPos = workspace.CurrentCamera:WorldToViewportPoint(Players.LocalPlayer.Character.HumanoidRootPart.Position)
                tracer.From = Vector2.new(torsoPos.X, torsoPos.Y)
                tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                tracer.Visible = true
            end
        else
            espObjects[item].Tracer.Visible = false
        end
    end

    if EruditeESP.Settings.ShowChams then
        applyChams(item, EruditeESP.Settings.VisualColour)
    end
end

function EruditeESP:RemoveDroppedItem(item)
    if espObjects[item] then
        espObjects[item].BillboardGui:Destroy()
        espObjects[item].Tracer:Remove()
        if espObjects[item].Connection then
            espObjects[item].Connection:Disconnect()
        end
        removeChams(item)
        espObjects[item] = nil
    end
end

function EruditeESP:InitializeDroppedItems()
    for _, item in pairs(Workspace.DroppedItems:GetChildren()) do
        updateDroppedItem(item)
    end

    Workspace.DroppedItems.ChildAdded:Connect(function(item)
        updateDroppedItem(item)
    end)

    Workspace.DroppedItems.ChildRemoved:Connect(function(item)
        self:RemoveDroppedItem(item)
    end)
end

return EruditeESP
