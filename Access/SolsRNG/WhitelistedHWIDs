local a=[[77fuscator 0.6.1]];return(function(a,b,c,d,e,e,e,f,g,h,i,j,k,k,l,m,n,o,p,q,r)local s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb=0 while true do if s<=8 then if s<=3 then if s<=1 then if 0==s then t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt=nil else bu=0 end else if s<3 then while true do if bu>=2 then if(bu==3 or bu>3)then if(bu<4)then bu=1 br=1 else bu=3 bq=function(cc,cd,ce)local cf=0 while true do if cf>0 then break else if ce then local ce=(cc/2^(cd-1))%2^((ce-1)-(cd-1)+1);return(ce-ce%1);else local cd=(2^(cd-1));return((cc%(cd+cd)>=cd)and 1 or 0);end;end cf=cf+1 end end end else bu=4 bp=(l or function(l,cc)local cd,ce local cf=1 while true do if cf<=1 then if cf>=1 then cf=2 cd,ce=1,0 else cf=3 while l>0 do local cg local ch=3 while true do if ch>=2 then if ch>=3 then ch=1 cg=l%2 else break end else if ch>0 then ch=0 if cg>0 then ce=ce+cd end else ch=2 l,cd=(l-cg)/2,cd*2 end end end end end else if cf<=2 then cf=4 while l>0 and cc>0 do local cg,ch local ci=3 while true do if ci>=2 then if ci>2 then ci=2 ch,cg=l%2,cc%2 else ci=1 if ch~=cg then ce=ce+cd end end else if ci==1 then ci=0 l,cc,cd=(l-ch)/2,(cc-cg)/2,cd*2 else break end end end end else if cf<4 then break else cf=0 if l<cc then l=cc end end end end end return ce end)end else if not(bu==1)then bu=2 bl=o(d(a,7,#a),'..',function(a)local l=0 while true do if l<1 then return c(i(a,16))else break end l=l+1 end end)else break end end end else bv=0 end end else if s<=5 then if s==4 then while true do if(bv<=1)then if(bv<1)then bv=(function(a)local i,l=0 while true do if i<=1 then if i==0 then l=0 else while true do if(a<106636 or a==106636)then if a>=78852 then if(a<=78852)then a=(a+86472)l=l+1 else if(a==83549)then a=a-89187 l=l+1 else a=a+10239 l=(l+1)end end else if(a==-5638 or a<-5638)then a=(a+5640)l=l+1 else a=(a+79771)l=(l+1)end end else if(a<164181 or a==164181)then if a<=116875 then a=(a+79104)l=(l+1)else if(a==164181)then a=(a-85329)l=l+1 else a=a+93507 l=(l+1)end end else if(a==165324 or a<165324)then a=(a-81775)l=l+1 else if(a<242403)then a=a-47083 l=l+1 else a=a-78222 l=l+1 end end end end if not(l~=11)then break end end end else if 3~=i then return a else break end end i=i+1 end end)(26865)bj=(function(a)local i,l,o=0 while true do if i<=1 then if 0<i then o=1 else l=nil end else if 2==i then while true do if(o<=1)then if not(o~=0)then break else o=2 l=0 end else if o<3 then o=3 while true do if(a<-127291 or a==-127291)then if a>=-206651 then if not(a==-206651)then a=a+95255 l=l+1 else a=(a+79360)l=l+1 end else if(a<-283663)then a=a+12912 l=l+1 else a=(a+77012)l=(l+1)end end else if(a>=-16102)then if a~=-16102 then a=(a-84072)l=l+1 else a=(a+45507)l=l+1 end else if(a==-54667 or a<-54667)then a=a+54867 l=(l+1)else a=(a+15934)l=l+1 end end end if l==8 then break end end else o=0 return a end end end else break end end i=i+1 end end)(-296575)else bv=(function(a)local i,l=0 while true do if i<=1 then if i==0 then l=0 else while true do if(a==-36174 or a<-36174)then if(a<=-57775)then if not(a~=-116940)then a=(a+62611)l=(l+1)else a=(a+96074)l=(l+1)end else if(a>-38021 or a==-38021)then if(a==-36174 or a>-36174)then a=(a-1847)l=l+1 else a=(a-19754)l=l+1 end else a=a+69420 l=l+1 end end else if(a<34610 or a==34610)then if(a<15091 or a==15091)then a=a-51265 l=(l+1)else if not(a==34610)then a=a-23515 l=(l+1)else a=(a-11091)l=l+1 end end else if(a==71854 or a>71854)then if(a<100193)then a=a-37244 l=(l+1)else a=a-28339 l=(l+1)end else a=a+61894 l=(l+1)end end end if l==11 then break end end end else if i>2 then break else return a end end i=i+1 end end)(-116940)bi=function()local a,i,l,o,bu,cc,cd=0 while true do if a<=2 then if a<=0 then i,l,o,bu=nil else if a==1 then cc=3 else while true do if(cc>2 or cc==2)then if cc>=3 then if(cc~=3)then cc=2 l=bp(l,bj)else cc=1 o,l,i,bu=b(bl,br,(br+3))end else cc=0 i=bp(i,bj)end else if cc>0 then cc=4 o=bp(o,bj)else break end end end end end else if a<=3 then cd=0 else if a==4 then while true do if cd<=1 then if(cd<0 or cd==0)then cd=1 bu=bp(bu,bj)else cd=2 br=br+4;end else if not(cd==3)then cd=3 return(bu*16777216)+(i*65536)+(l*256)+o;else break end end end else break end end end a=a+1 end end end else if(bv<=2)then bv=(function(a)local i,l=0 while true do if i<=1 then if i~=1 then l=0 else while true do if(a==-24485 or a>-24485)then if(a>59064 or a==59064)then if(a<59064 or a==59064)then a=a+1591 l=(l+1)else if not(a~=60655)then a=a+32296 l=l+1 else a=(a-92950)l=l+1 end end else if(a>=-11070)then if(a>=5508)then a=a-61895 l=(l+1)else a=a-13415 l=(l+1)end else a=(a-10331)l=(l+1)end end else if(a>-56387 or a==-56387)then if(a>=-55889)then if not(a==-55889)then a=(a+93880)l=(l+1)else a=(a+61397)l=(l+1)end else a=a-17781 l=l+1 end else if(a==-74168 or a>-74168)then a=a-17759 l=l+1 else a=a+80857 l=l+1 end end end if not(l~=11)then break end end end else if 2==i then return a else break end end i=i+1 end end)(-55889)w={}else if bv>3 then bv=((((bp(bp(1231616,626607),336975))-294635)-985794)-630926)-79522 bf=function()local a,i,l=0 while true do if a<=1 then if a<1 then i=nil else l=0 end else if 3>a then while true do if(l==2 or l>2)then if l>2 then l=2 br=br+1;else l=1 return i;end else if l~=1 then l=3 i=bp(b(bl,br,br),bj)else break end end end else break end end a=a+1 end end else break end end end end else bw=0 end else if s<=6 then while true do if(bw>=2)then if(bw>=3)then if not(bw~=4)then bw=(function(a)local i,l=0 while true do if i<=1 then if i>0 then while true do if a>=4422 then if(a>=57101)then if(a<57101 or a==57101)then a=a-57098 l=(l+1)else a=(a-36257)l=(l+1)end else if a>4422 then a=a-99884 l=l+1 else a=(a+88936)l=l+1 end end else if(a<-63402 or a==-63402)then a=a+67824 l=(l+1)else if(a>-34892)then a=a+65304 l=(l+1)else a=a+6070 l=(l+1)end end end if not(l~=7)then break end end else l=0 end else if i<3 then return a else break end end i=i+1 end end)(-34892)x=function(a,i)local l=0 while true do if 0<l then break else return k((a/i));end l=l+1 end end else bw=(function(a)local i,l=0 while true do if i<=1 then if i>0 then while true do if a<=2809 then if not(a~=-89048)then a=(a+89050)l=l+1 else a=a-91857 l=(l+1)end else if a>10276 then a=(a-19477)l=l+1 else a=(a+12010)l=(l+1)end end if(l==4)then break end end else l=0 end else if 3>i then return a else break end end i=i+1 end end)(10276)bk=(2^32)end else bw=(function(a)local i,l=0 while true do if i<=1 then if 0<i then while true do if(a<-84547 or a==-84547)then if(a==-118288 or a<-118288)then if(a<=-156888)then a=a+46956 l=(l+1)else a=(a+33741)l=l+1 end else if(a>-95066 or a==-95066)then if a<-84547 then a=a+49764 l=l+1 else a=(a-72341)l=(l+1)end else a=(a+14866)l=(l+1)end end else if a>=-11464 then if(a<=-11464)then a=(a-11028)l=l+1 else if a>4245 then a=(a-53516)l=l+1 else a=a+49272 l=(l+1)end end else if(a<-22492)then a=a+49547 l=l+1 else a=(a-95796)l=l+1 end end end if l==10 then break end end else l=0 end else if i<3 then return a else break end end i=i+1 end end)(-11464)bo=m or function(a,i)local l,m,o,bu=0 while true do if l<=1 then if 1~=l then m,o=nil else bu=3 end else if l==2 then while true do if(bu<=1)then if bu~=1 then break else bu=4 o=1 end else if(bu<=2)then bu=0 return m;else if(bu<3 or bu==3)then bu=1 m=0 else bu=2 while(a>0 or i>0)do local bu,bv local cc=1 while true do if(cc==2 or cc>2)then if(cc==3 or cc>3)then if(cc<=3)then cc=0 a=k((a/2));else cc=2 bu=i%2 end else cc=3 if bv==1 or bu==1 then m=(m+o);end;end else if(cc==0)then break else cc=4 bv=a%2 end end end local a=2 while true do if(a>1 or a==1)then if not(a==2)then a=0 o=(o*2);else a=1 i=k((i/2));end else break end end end;end end end end else break end end l=l+1 end end end else if(bw<0 or bw==0)then bw=(function(a)local i,l=0 while true do if i<=1 then if 1>i then l=0 else while true do if(a==-19286 or a<-19286)then if(a<=-96261)then a=(a+96265)l=(l+1)else if not(a==-32613)then a=a+96267 l=l+1 else a=a+13327 l=(l+1)end end else if a>=76981 then if not(a~=76981)then a=(a+4279)l=(l+1)else a=a-93593 l=(l+1)end else if a~=-3770 then a=(a-83928)l=l+1 else a=(a-28843)l=l+1 end end end if not(l~=7)then break end end end else if 3>i then return a else break end end i=i+1 end end)(-3770)be=(n or function(a,i)local l,m,n,o=0 while true do if l<=1 then if l>0 then o=0 else m,n=nil end else if 3>l then while true do if(o<1 or o==1)then if not(o~=0)then o=4 m=0 else o=3 return m;end else if o<=2 then o=1 while(a>0)and(i>0)do local bu,bv local bw=4 while true do if bw>=2 then if(bw<2 or bw==2)then break else if bw~=4 then bw=0 if(bu==1)and(bv==1)then m=(m+n);end;else bw=1 bu=(a%2)end end else if not(bw~=0)then bw=2 a=k((a/2));else bw=3 bv=i%2 end end end local a=2 while true do if(a>1 or a==1)then if a<2 then break else a=0 i=k(i/2);end else a=1 n=n*2;end end end;else if(o<=3)then break else o=2 n=1 end end end end else break end end l=l+1 end end)else break end end end else if 8>s then bx=0 else while true do if bx>=2 then if(bx==3 or bx>3)then if not(bx==3)then bx=(function(a)local i,l=0 while true do if i<=1 then if 1>i then l=0 else while true do if a<=68549 then if(a==-5024 or a<-5024)then if(a~=-53813)then a=(a-48789)l=(l+1)else a=(a+54033)l=l+1 end else if a<=220 then a=a+46342 l=l+1 else if a~=46562 then a=(a-73573)l=(l+1)else a=(a-46560)l=(l+1)end end end else if(a==142931 or a<142931)then if(a==85663 or a<85663)then a=(a+93936)l=l+1 else if(a>142931 or a==142931)then a=(a-54378)l=l+1 else a=a-20004 l=(l+1)end end else if(a>=176268)then if(a>176268)then a=(a-3331)l=(l+1)else a=(a-33337)l=(l+1)end else a=(a-76740)l=(l+1)end end end if not(l~=11)then break end end end else if i~=3 then return a else break end end i=i+1 end end)(162403)y=(q or function(a,i)if i<0 then return bm(a,-i)end return k(a%bk/2^i)end);else bx=(function(a)local i,k=0 while true do if i<=1 then if i>0 then while true do if a>=104161 then if(a==130444 or a>130444)then if(a>=161392)then if a<174199 then a=(a-30948)k=(k+1)else a=a-70038 k=k+1 end else a=a-58366 k=k+1 end else if(a<106664)then a=(a+2503)k=k+1 else a=a+54728 k=(k+1)end end else if(a<-71940 or a==-71940)then if a>=-71940 then a=a-12607 k=(k+1)else a=(a+84548)k=(k+1)end else if a>23507 then a=(a-48571)k=k+1 else a=(a-95447)k=(k+1)end end end if not(k~=9)then break end end else k=0 end else if i>2 then break else return a end end i=i+1 end end)(174199)bn=function()local a,i,k,l=0 while true do if a<=1 then if 0<a then l=0 else i,k=nil end else if a<=2 then while true do if l>=2 then if(l>3 or l==3)then if(l>3)then l=1 k=bp(k,bj)else l=4 i=bp(i,bj)end else break end else if l<=0 then l=3 i,k=b(bl,br,br+2)else l=2 br=br+2;end end end else if 3<a then break else return((k*256))+i;end end end a=a+1 end end end else bx=(function(a)local i,k=0 while true do if i<=1 then if i==0 then k=0 else while true do if(a>=-64937)then if(a>=-19664)then if(a>=-16586)then if(a<=-16586)then a=(a+86588)k=(k+1)else a=a-89666 k=(k+1)end else a=(a-2875)k=(k+1)end else if(a>-45706 or a==-45706)then if(a==-45706 or a<-45706)then a=a-19231 k=(k+1)else a=(a-23167)k=k+1 end else a=a-61910 k=k+1 end end else if(a>-104960 or a==-104960)then if(a>-71733 or a==-71733)then if a<-66571 then a=(a+71736)k=k+1 else a=(a-59481)k=k+1 end else a=a+33227 k=k+1 end else if(a<-126847 or a==-126847)then a=(a+60276)k=(k+1)else a=(a+21092)k=(k+1)end end end if not(k~=11)then break end end end else if i~=3 then return a else break end end i=i+1 end end)(-16586)bm=r or function(a,i)local k=0 while true do if k<=0 then if(i<0)then return y(a,-i)end else if k<2 then return((a*2^i)%bk);else break end end k=k+1 end end;end else if bx<1 then bx=(function(a)local i,k=0 while true do if i<=1 then if 1>i then k=0 else while true do if(a>-61058 or a==-61058)then if a<=-61058 then a=(a+1308)k=k+1 else a=(a-11863)k=k+1 end else if(a>-150471)then a=a+71617 k=k+1 else a=(a+89413)k=(k+1)end end if not(k~=4)then break end end end else if 3~=i then return a else break end end i=i+1 end end)(-150471)bm,y=nil else break end end end end end end end else if s<=12 then if s<=10 then if 9==s then by=1 else while true do if(by<=1)then if(by~=1)then by=(function(a)local i,k=0 while true do if i<=1 then if 0<i then while true do if(a==255560 or a>255560)then if(a>304048 or a==304048)then if a<=304048 then a=(a-59371)k=(k+1)else if not(a==326371)then a=a-65041 k=k+1 else a=a-22323 k=k+1 end end else if(a==255560 or a<255560)then a=a+42419 k=k+1 else if not(a==297979)then a=a-24863 k=(k+1)else a=a+93433 k=k+1 end end end else if(a==153766 or a<153766)then if a~=70345 then a=(a-83421)k=k+1 else a=a-70343 k=k+1 end else if(a<198343 or a==198343)then a=a+82080 k=k+1 else if(a>244677 or a==244677)then a=(a-32770)k=k+1 else a=a-58141 k=k+1 end end end end if(k==11)then break end end else k=0 end else if i==2 then return a else break end end i=i+1 end end)(198343)bb={}else by=(function(a)local i,k=0 while true do if i<=1 then if 0==i then k=0 else while true do if(a<=72009)then if not(a==72009)then a=(a-59695)k=(k+1)else a=a-12310 k=(k+1)end else if(a~=218392)then a=(a-84718)k=(k+1)else a=a-61665 k=(k+1)end end if not(k~=4)then break end end end else if 3>i then return a else break end end i=i+1 end end)(218392)bd=function(a)local i=0 while true do if 0<i then break else return((-1-a)%bk)end i=i+1 end end end else if(by<2 or by==2)then by=(function(a)local i,k=0 while true do if i<=1 then if 1~=i then k=0 else while true do if(a==-73821 or a>-73821)then if(a>26870 or a==26870)then if(a<26870 or a==26870)then a=(a+43673)k=k+1 else if not(a==70543)then a=a-75912 k=k+1 else a=a+19449 k=(k+1)end end else if(a==-53438 or a>-53438)then if(a<-53438 or a==-53438)then a=(a-94189)k=k+1 else a=a-67518 k=k+1 end else a=a+73824 k=(k+1)end end else if a>=-147627 then if(a>=-144403)then if not(a==-144403)then a=(a-66274)k=(k+1)else a=a+70582 k=k+1 end else a=a-64865 k=k+1 end else if(a<-154061)then a=a+58431 k=k+1 else a=(a+75932)k=(k+1)end end end if not(k~=11)then break end end end else if i>2 then break else return a end end i=i+1 end end)(26870)bh=function()local a,i,k,l,m=0 while true do if a<=1 then if a<1 then i,k,l=nil else m=2 end else if a<=2 then while true do if(m>=2)then if(m>3 or m==3)then if not(m~=3)then m=1 l=nil else m=3 i=0 end else m=4 k=0 end else if(m<1)then break else m=0 repeat local m=0 while true do if(m<=1)then if(m~=0)then break else m=3 l=bp(b(bl,br,br),bj);end else if m<=2 then m=4 k=k+be(l,127)*2^i;else if m>3 then m=1 i=i+7;else m=2 br=(br+1);end end end end until not(be(l,128)~=0);end end end else if 4~=a then return k;else break end end end a=a+1 end end else if(by~=3)then by=0 bc=function()local a,i,k=0 while true do if a<=1 then if a~=1 then i=nil else k=3 end else if a<3 then while true do if k>=2 then if(k<=2)then k=0 for l=0,2 do i=bo(i,bm(bp(b(bl,br,br),bj),(8*l)));br=br+1;end else k=2 i=0 end else if(k==1 or k>1)then break else k=1 return i;end end end else break end end a=a+1 end end else break end end end end end else if s==11 then bz=0 else while true do if bz>=2 then if(bz<2 or bz==2)then bz=(function(a)local i,k=0 while true do if i<=1 then if i==0 then k=0 else while true do if a>=-115336 then if(a>=-88577)then if(a<-37545)then a=a+51032 k=k+1 else a=(a+37548)k=(k+1)end else if(a>-115336)then a=a-69134 k=k+1 else a=a-64678 k=(k+1)end end else if a>=-180014 then if not(a~=-180014)then a=(a+91437)k=k+1 else a=a+27865 k=(k+1)end else if not(a==-233960)then a=a+65748 k=k+1 else a=a+94145 k=k+1 end end end if not(k~=8)then break end end end else if i==2 then return a else break end end i=i+1 end end)(-233960)ba=function()local a,i,k,l,m,n,o,q,r=0 while true do if a<=2 then if a<=0 then i,k,l,m,n,o=nil else if a>1 then while true do if(q<=1)then if q<1 then break else q=0 n=(bq(i,1,20)*(2^32))+o end else if q<=2 then q=4 if o==0 and not(i~=0)then return 0;end;else if(q==3)then q=2 o,i=bi(),bi()else q=1 k=1 end end end end else q=3 end end else if a<=3 then r=4 else if 4<a then break else while true do if(r==1 or r<1)then if not(r==0)then r=0 if(not(m~=0))then if(not(n~=0))then return l*0;else m=1;k=0;end;elseif(not(m~=2047))then if((n==0))then return(l*(1/0));else return(l*(0/0));end;end;else r=3 return(l*2^(m-1023)*(k+(n/(2^52))))end else if(r>3 or r==3)then if(r>=4)then r=2 m=bq(i,21,31)else break end else r=1 l=(((-1)^bq(i,32)))end end end end end end a=a+1 end end else if bz~=4 then bz=(function(a)local i,k=0 while true do if i<=1 then if i~=1 then k=0 else while true do if(a>=135544)then if(a>205278 or a==205278)then if not(a==250453)then a=(a+45175)k=k+1 else a=a-80719 k=(k+1)end else if not(a==169734)then a=(a-19983)k=k+1 else a=(a-70549)k=k+1 end end else if(a==99185 or a<99185)then if a<=17005 then a=a-17004 k=(k+1)else a=a-82180 k=(k+1)end else if(a==115561 or a>115561)then a=(a+89717)k=(k+1)else a=(a+33992)k=k+1 end end end if not(k~=8)then break end end end else if i==2 then return a else break end end i=i+1 end end)(101552)t=bi else break end end else if not(bz==1)then bz=(function(a)local i,k=0 while true do if i<=1 then if 0==i then k=0 else while true do if(a>61017 or a==61017)then if(a==160286 or a>160286)then if(a~=160286)then a=(a-42932)k=(k+1)else a=a-99269 k=(k+1)end else if not(a==76537)then a=(a-47219)k=k+1 else a=(a-44581)k=k+1 end end else if(a==13798 or a>13798)then if not(a==13798)then a=(a-31954)k=(k+1)else a=a-2623 k=k+1 end else a=(a+65362)k=(k+1)end end if not(k~=7)then break end end end else if 3>i then return a else break end end i=i+1 end end)(203218)u={}else bz=(function(a)local i,k=0 while true do if i<=1 then if 1~=i then k=0 else while true do if(a<-163071 or a==-163071)then if a<=-263429 then if a==-263429 then a=a-23710 k=k+1 else a=a+81178 k=(k+1)end else if(a>-205961 or a==-205961)then if a==-163071 then a=a-51947 k=k+1 else a=(a+63123)k=k+1 end else a=(a-48411)k=k+1 end end else if a<=-139428 then if(a>=-139428)then a=(a-23643)k=k+1 else a=(a+68067)k=k+1 end else if(a==-74771 or a<-74771)then a=a+45137 k=(k+1)else if(a~=47228)then a=a+76862 k=(k+1)else a=(a-47224)k=k+1 end end end end if(k==10)then break end end end else if 3~=i then return a else break end end i=i+1 end end)(-139428)bs=function()local a,i,k,l,m,n=0 while true do if a<=2 then if a<=0 then i,k,l=nil else if a~=2 then m=3 else while true do if m>=2 then if m<=2 then m=0 if(not(l~=0))then return'';end;else if(m==3 or m<3)then m=2 l=t()else break end end else if m<1 then m=1 i=d(bl,br,((br+l)-1))else m=4 br=(br+l);end end end end end else if a<=3 then n=3 else if a>4 then break else while true do if(n>=2)then if not(n==2)then n=1 k=''else break end else if n<1 then n=2 return k;else n=0 for l=1,#i do k=k..c(bp(b(d(i,l,l)),bj));end end end end end end end a=a+1 end end end end end end end else if s<=14 then if 14>s then ca=1 else while true do if(ca==2 or ca>2)then if(ca>3 or ca==3)then if not(ca~=4)then ca=0 bg=function()local a,b,c,d,i,k,l,m=0 while true do if a<=3 then if a<=1 then if a~=1 then b,c,d,i=nil else k=4 end else if a==2 then while true do if(k==2 or k>2)then if(k<=2)then k=0 d[73]=bp(bn(),bj);else if(k>4 or k==4)then k=3 d={}else k=2 i={}end end else if k<1 then k=1 d[9]={};else break end end end else l=1 end end else if a<=5 then if a~=5 then while true do if(l<1 or l==1)then if not(l==1)then l=3 c=bi()else l=0 for i=1,bh()do local k=bf();if(not(bq(k,1,1)~=0))then local n,o,q local r=1 while true do if(r==2 or r>2)then if(r>3 or r==3)then if not(r==3)then r=3 o={[107]=bh(),[30]=bn(),}else r=0 if((n==0))then o[18]=bc();o[6]=bc();o[164]=bn();o[95]=bi();elseif(n==1)then o[18]=bi();elseif(not(n~=2))then o[18]=bi()-((2^16))elseif(n==3)then o[18]=(bi()-((2^16)))o[6]=bc();o[164]=bn();o[95]=bi();end;end else r=4 q=bq(k,4,6)end else if not(r~=0)then break else r=2 n=bq(k,2,3)end end end d[9][i]=o;end end end else if l>=3 then if not(l~=3)then l=4 b={}else l=2 for i=1,c do local c=bf();if(not(c~=0))then b[i]=((bf()~=0));elseif(c==1)then b[i]=ba();elseif(not(c~=2))then if not(bf()~=1)then b[i]=v()else b[i]=bs()end;end;end end else break end end end else m=4 end else if 6<a then break else while true do if m>=2 then if(m>3 or m==3)then if not(m~=3)then m=1 for c=1,bh()do d[118][(c-1)]=bg();end else m=0 d[39]=b;end else break end else if not(m~=1)then m=2 return d;else m=3 d[118]={};end end end end end end a=a+1 end end else ca=(function(a)local b,c=0 while true do if b<=1 then if 0<b then while true do if a<=21489 then if a~=-20327 then a=a-41816 c=c+1 else a=a+97481 c=(c+1)end else if(a~=118190)then a=(a-77150)c=c+1 else a=(a-96701)c=(c+1)end end if not(c~=4)then break end end else c=0 end else if b<3 then return a else break end end b=b+1 end end)(118190)v=function()local a=0 while true do if 0==a then return f({},{['\95\95\105\110\100\101\120']=function()while true do end end,['\95\95\110\101\119\105\110\100\101\120']=function()while true do end end,['\95\95\116\111\115\116\114\105\110\103']=function()while true do end end,})else break end a=a+1 end end end else ca=(function(a)local b,c=0 while true do if b<=1 then if 0==b then c=0 else while true do if(a<163264 or a==163264)then if(a>129453 or a==129453)then if(a==163264 or a>163264)then a=a-41379 c=(c+1)else a=a+33811 c=c+1 end else if(a==121885)then a=a-96845 c=(c+1)else a=(a-25037)c=(c+1)end end else if(a==214520 or a>214520)then if(a<=214520)then a=a-85067 c=(c+1)else if a>246348 then a=(a-83753)c=(c+1)else a=a+51925 c=(c+1)end end else if a~=171303 then a=a-14 c=c+1 else a=a+75045 c=(c+1)end end end if not(c~=9)then break end end end else if b~=3 then return a else break end end b=b+1 end end)(171317)bt=function(...)local a=0 while true do if a==0 then return{...},g('#',...)else break end a=a+1 end end end else if ca<1 then break else ca=(function(a)local b,c=0 while true do if b<=1 then if 0<b then while true do if(a==76078 or a<76078)then if(a>54164 or a==54164)then if(a==76078)then a=a-21914 c=(c+1)else a=a+55866 c=c+1 end else if a>=18663 then a=a-18661 c=(c+1)else a=a+5703 c=(c+1)end end else if(a>107217 or a==107217)then if a>=110030 then if(a~=110030)then a=a-42314 c=c+1 else a=a-12954 c=c+1 end else a=a+15989 c=(c+1)end else if a>80892 then a=(a+10141)c=c+1 else a=(a-67932)c=c+1 end end end if c==9 then break end end else c=0 end else if 2==b then return a else break end end b=b+1 end end)(76078)z=bi end end end end else if s<=15 then cb=function(a,b)local c;local d;local f=a[9];local i;return function(...)local k=1;local l;local m;local n;local o;local q;local r;local t;local v;local z;local ba;while true do ba=f[k];z=ba[107];if(z>98 or z==98)then if(z>147 or z==147)then if(z<171 or z==171)then if(z==159 or z>159)then if(z>=165)then if(z<167 or z==167)then if(z>166 or z==166)then if(z<166 or z==166)then c[ba[18]]=-c[ba[18]];else if((c[ba[18]]==c[ba[6]]))then k=(k+1);end;end else t[ba[30]][t[ba[18]]]=c[ba[6]];end else if(z<=169)then if not(z~=168)then local bc=ba[30];local bf=t[bc];local bh=(n-bc);do local bh,bi=1,bh;while true do bf[bh]=t[(bc+bh)]if bh>=bi then break end;bh=bh+1;end;end;else if((c[ba[18]]==t[ba[6]]))then k=k+1;end;end else if not(z~=171)then t[ba[30]]=t[ba[18]];else local bc=b[ba[18]];t[ba[30]]=bc[1][bc[2]];end end end else if(z>162 or z==162)then if(z>=163)then if(z<164)then if((c[ba[30]]>t[ba[6]]))then k=k+1;else k=ba[18];end;else t[ba[30]]=(c[ba[18]]^t[ba[6]]);end else if((t[ba[30]]>t[ba[6]]or t[ba[30]]==t[ba[6]]))then k=(k+1);else k=ba[18];end;end else if(z==160 or z>160)then if z==161 then local bc=ba[30]t[bc](h(t,bc+1,ba[18]))else local bc=ba[30];local bf=t[bc];local bh=ba[18];for bi=1,bh do bf[bi]=t[bc+bi]end;end else t[ba[30]]=(c[ba[18]]-c[ba[6]]);end end end else if(z>153 or z==153)then if(z<155 or z==155)then if(z==154 or z>154)then if z==155 then t[ba[30]]=c[ba[18]]+t[ba[6]];else t[ba[30]]=(t[ba[18]]+c[ba[6]]);end else local bc=ba[30];for bf=bc,ba[6]do t[bf]=c[bf-bc+1];end;end else if z<=156 then if(t[ba[30]]<c[ba[6]])then k=k+1;else k=ba[18];end;else if z>157 then local bc=ba t[ba[30]]=function()return bc[30]end;else n=-1 end end end else if(z<=149)then if(z==148 or z>148)then if(z<148 or z==148)then t[ba[30]][c[ba[18]]]=t[ba[6]];else t[ba[30]]=x(t[ba[18]],t[ba[6]]);end else t[ba[30]]=c;end else if(z<150 or z==150)then t[ba[30]]=be(c[ba[18]],c[ba[6]]);else if z>151 then t[ba[30]][ba[18]]=ba[6];else t[ba[30]]=bp(c[ba[18]],c[ba[6]]);end end end end end else if(z>184 or z==184)then if(z>190 or z==190)then if z>=193 then if z<=194 then if z>193 then t[ba[30]]=bp(c[ba[18]],t[ba[6]]);else local bc=t[ba[18]]do local j,bf,bh,bi=j,t[ba[30]];while true do bh,bi=j(bf,bh)if not bh then break end;bc[(#bc+1)]=bi end;end;end else if(z>=196)then t[ba[30]]=bb;else local j=ba[30];k=k+1;local bb=((f[k][236]-1)*50);local bc=t[j];local bf=n-j;do local bf,bh=1,bf;while true do bc[(bb+bf)]=t[j+bf]if bf>=bh then break end;bf=bf+1;end;end;end end else if(z==191 or z>191)then if z~=192 then k=ba[18];else t[ba[30]][t[ba[18]]]=t[ba[6]];end else local j=ba[30];local bb=(ba[6]-1)*50;local bc=t[j];local bf=ba[18];do local bf,bh=1,bf;while true do bc[bb+bf]=t[j+bf]if bf>=bh then break end;bf=bf+1;end;end;end end else if(z==186 or z<186)then if(z>=185)then if z==185 then i=a[73];else if(c[ba[18]]~=c[ba[6]])then k=(k+1);end;end else local j=ba[30];local bb=t[(j+2)];local bc=(t[j]+bb);local bf=t[j+1];local bh;if(bb==p(bb))then bh=(bc==bf or bc<bf);else bh=bc>=bf;end;if bh then t[j]=bc;t[j+3]=bc;k=ba[18];end;end else if z>=188 then if(z>=189)then t[ba[30]][ba[18]]=t[ba[6]];else if(c[ba[30]]<c[ba[6]])then k=(k+1);else k=ba[18];end;end else t[ba[30]]=f;end end end else if(z<=177)then if(z>=175)then if(z<175 or z==175)then if((c[ba[30]]<=t[ba[6]]))then k=k+1;else k=ba[18];end;else if(z<=176)then if(t[ba[30]]<=t[ba[6]])then k=k+1;else k=ba[18];end;else t[ba[30]]=w;end end else if(z<172 or z==172)then local j=ba t[ba[30]]=function()return j[30]end;else if(z~=174)then t[ba[30]]=bp(t[ba[18]],t[ba[6]]);else c=a[39];end end end else if(z==181 or z>181)then if(z<181 or z==181)then t[ba[6]]=t[ba[30]](t[ba[18]]);else if z>182 then local j=ba[30]local p={t[j](h(t,j+1,ba[18]))};local bb=0;do local j,bc=j,ba[6];while true do bb=bb+1;t[j]=p[bb];if j>=bc then break end;j=j+1;end;end;else t[ba[30]]=t end end else if(z<=178)then t[ba[30]]=x(t[ba[18]],c[ba[6]]);else if z>=180 then if((c[ba[30]]==c[ba[6]]or c[ba[30]]<c[ba[6]]))then k=(k+1);else k=ba[18];end;else t[ba[30]]=c[ba[18]];end end end end end end else if(z>122 or z==122)then if z>=134 then if(z==140 or z>140)then if(z>143 or z==143)then if(z<=144)then if not(z==143)then t[ba[30]]=bm(c[ba[18]],t[ba[6]]);else local j=ba[30];do return t[j](h(t,j+1,n))end;end else if(z<=145)then local j=ba[30]t[j]=t[j](h(t,j+1,n));else t[ba[30]]=bo(c[ba[18]],c[ba[6]]);end end else if(z<=140)then if(c[ba[30]]<t[ba[6]])then k=k+1;else k=ba[18];end;else if(z==142)then if(t[ba[30]]<t[ba[6]])then k=(k+1);else k=ba[18];end;else local j=ba[30];local p=(ba[6]-1)*50;local bb=t[j];local bc=n-j;do local bc,bf=1,bc;while true do bb[(p+bc)]=t[j+bc]if bc>=bf then break end;bc=bc+1;end;end;end end end else if(z>137 or z==137)then if(z==138 or z>138)then if z==138 then t[ba[30]]=t[ba[18]][c[ba[6]]];else if((t[ba[30]]>c[ba[6]]))then k=k+1;else k=ba[18];end;end else t[ba[30]]=bo(t[ba[18]],c[ba[6]]);end else if z>=135 then if not(z==135)then local j=ba[30];local p=ba[18];do local p,bb=j,p;while true do t[p]=q[(p-j)];if p>=bb then break end;p=p+1;end;end;else t[ba[30]]=be(c[ba[18]],t[ba[6]]);end else if(c[ba[18]]~=t[ba[6]])then k=k+1;end;end end end else if(z==128 or z>128)then if(z<130 or z==130)then if(z==129 or z>129)then if(z<129 or z==129)then t[ba[30]]={h({},1,ba[18])};else t[ba[30]]=(t[ba[18]]*c[ba[6]]);end else if((t[ba[18]]~=t[ba[6]]))then k=(k+1);end;end else if z<=131 then t[ba[30]]=(t[ba[18]]/c[ba[6]]);else if(z<=132)then t[ba[30]]=6;else t[ba[30]]=c[ba[18]]/c[ba[6]];end end end else if z<=124 then if(z==122 or z<122)then local j=ba[30]local p,bb=bt(t[j]())n=bb+j-1 local bb=0;do local j,bc=j,n;while true do bb=(bb+1);t[j]=p[bb];if j>=bc then break end;j=j+1;end;end;else if(z~=123)then local j=ba[18];t[ba[30]]=t[j]..t[j+1];else local j=ba[30];local p=ba[18];local bb=ba[6];do local j,p=j,p;while true do t[j]=t[j-bb];if j>=p then break end;j=j+1;end;end;end end else if(z>126 or z==126)then if z>=127 then t[ba[30]]=bm(t[ba[18]],t[ba[6]]);else local j=ba[30]local p={t[j](t[j+1])};local bb=0;do local j,bc=j,ba[6];while true do bb=(bb+1);t[j]=p[bb];if j>=bc then break end;j=j+1;end;end;end else end end end end else if(z<=109)then if(z<103 or z==103)then if(z==100 or z<100)then if(z>99 or z==99)then if z>=100 then t[ba[30]]=bo(t[ba[18]],t[ba[6]]);else t[ba[30]]={};end else m={...}end else if(z<101 or z==101)then t[ba[30]]=nil;else if(z>102)then t[ba[30]]=c[ba[18]]+c[ba[6]];else t[ba[30]]=(t[ba[18]]^t[ba[6]]);end end end else if z<=106 then if(z<104 or z==104)then local j=ba[30];k=k+1;local p=(f[k][236]-1)*50;local bb=t[j];local bc=ba[18];do local bc,bf=1,bc;while true do bb[p+bc]=t[(j+bc)]if bc>=bf then break end;bc=bc+1;end;end;else if(z<=105)then local j=ba[30]t[j]=t[j](t[j+1]);else t[ba[30]]();end end else if(z>=108)then if(z<108 or z==108)then t[ba[30]]=r;else t[ba[30]]=be(t[ba[18]],c[ba[6]]);end else if not(ba[30]==0)then k=(k+ba[18]);ba[18]=0;end;end end end else if z>=116 then if z>=119 then if(z<119 or z==119)then if(not(t[ba[18]]~=t[ba[6]]))then k=(k+1);end;else if z~=120 then local j=ba[30]t[j](h(t,(j+1),n))else do return t[ba[30]]();end;end end else if z>=117 then if(z>117)then local j=ba[18];local p=t[j]do local j,bb=j+1,ba[6];while true do p=(p..t[j]);if j>=bb then break end;j=j+1;end;end;t[ba[30]]=p;else o={}end else t[ba[30]]=(not t[ba[18]]);end end else if(z<=112)then if(z>111 or z==111)then if z<=111 then t[ba[30]]=(t[ba[18]]%t[ba[6]]);else do local j,p=ba[30],ba[18];while true do t[j]=nil;if j>=p then break end;j=j+1;end;end;end else t[ba[18]]=-t[ba[18]];end else if(z<113 or z==113)then t[ba[30]]=be(t[ba[18]],t[ba[6]]);else if not(z==115)then t[ba[30]]=cb(d[ba[18]],nil);else local j=ba[30]t[j]=t[j]();end end end end end end end else if(z==49 or z>49)then if(z>=73)then if(z<84 or z==84)then if(z>=79)then if(z==82 or z>82)then if(z==83 or z>83)then if(z~=83)then if(t[ba[30]]>t[ba[6]])then k=k+1;else k=ba[18];end;else t[ba[30]]=(t[ba[18]]+t[ba[6]]);end else local j=ba[30]t[j](t[j+1])end else if(z==79 or z<79)then t[ba[30]]=y(c[ba[18]],t[ba[6]]);else if(z>=81)then t[ba[30]]=r[c[ba[18]]];else t[ba[30]]=y(t[ba[18]],c[ba[6]]);end end end else if(z>76 or z==76)then if(z<=76)then return h(t[ba[30]]);else if(z>78 or z==78)then local j=ba[30];local p=t[ba[18]];t[(j+1)]=p;t[j]=p[t[ba[6]]];else t={};do local j,p=0,l;while true do if(j<i)then t[j]=m[(j+1)];else break end;if j>=p then break end;j=j+1;end;end;end end else if(z>74 or z==74)then if(z==75 or z>75)then if(not(t[ba[18]]==c[ba[6]]))then k=(k+1);end;else t[ba[30]]=(t[ba[18]]/t[ba[6]]);end else t[ba[30]]=c[ba[18]]*t[ba[6]];end end end else if(z<90 or z==90)then if(z<87 or z==87)then if(z==86 or z>86)then if(z>87 or z==87)then t[ba[30]]=x(c[ba[18]],t[ba[6]]);else local j=t[ba[6]];if not j then k=(k+1);else t[ba[30]]=j;k=ba[18];end;end else local j=d[ba[18]];local p={};local bb=ba[6];for bc=1,bb,1 do k=(k+1);local bb=f[k];if not(bb[107]~=171)then p[bc-1]={t,bb[18],nil};else p[bc-1]=b[bb[18]]end;o[(#o)+1]=p;end;t[ba[30]]=cb(j,p);end else if z>=89 then if(z==89 or z<89)then t[ba[30]]=107;else end else t[ba[30]]=y(t[ba[18]],t[ba[6]]);end end else if z<=93 then if(z==92 or z>92)then if(z==92)then else t[ba[30]]=bo(c[ba[18]],t[ba[6]]);end else local j=ba[30];do return t[j],t[(j+1)]end end else if(z<95 or z==95)then if(z==94 or z<94)then local j=ba[6];do return h(t,j,n)end;else if t[ba[30]]then k=(k+1);else k=ba[18];end;end else if z==97 then t[ba[30]]=bp(t[ba[18]],c[ba[6]]);else t[ba[30]]=ba[18];end end end end end else if z>=61 then if(z==67 or z>67)then if z>=70 then if(z<70 or z==70)then t[ba[30]]=(t[ba[18]]-t[ba[6]]);else if not(z~=71)then local j=ba[30]local p={t[j]()};local bb=ba[6];local bc=0;for be=j,bb do bc=bc+1;t[be]=p[bc];end else if not t[ba[30]]then k=k+1;else k=ba[18];end;end end else if(z==68 or z>68)then if z>68 then t[ba[30]]=#t[ba[18]];else r=e()end else t[ba[30]]=c[ba[18]]^c[ba[6]];end end else if(z>=64)then if(z==64 or z<64)then t[ba[30]]=f[(k+ba[18])];else if not(z==65)then t[ba[30]]=c[ba[18]]%c[ba[6]];else t[ba[30]][t[ba[18]]]=ba[6];end end else if(z==61 or z<61)then t[ba[30]]=bm(c[ba[18]],c[ba[6]]);else if not(z==62)then t[ba[30]]=30;else local e=ba[30]t[e]=t[e](h(t,e+1,ba[18]));end end end end else if(z>55 or z==55)then if(z<=57)then if z>=56 then if(z==56)then t[ba[30]]=t[ba[18]][ba[6]];else local e=ba[30];local f=ba[6];local j=e+2;local p={t[e](t[e+1],t[j])};do local f,bb=1,f;while true do t[j+f]=p[f];if f>=bb then break end;f=f+1;end;end;local e=t[e+3];if e then t[j]=e;else k=(k+1);end;end else q={}end else if(z<=58)then t[ba[30]]=bp;else if(z==60 or z>60)then if((c[ba[30]]==t[ba[6]]or c[ba[30]]>t[ba[6]]))then k=k+1;else k=ba[18];end;else local e=ba[30];do return h(t,e,(e+ba[18]))end;end end end else if(z>52 or z==52)then if z>=53 then if z<=53 then t[ba[6]]=-t[ba[6]];else local e=ba[30];do return t[e](h(t,e+1,ba[18]))end;end else local e=ba[30];local f={};do local j,p=1,#o;while true do local o=o[j];do local bb,bc=0,#o;while true do local o=o[bb];local be=o[1];local bf=o[2];if(be==t)and(bf==e or bf>e)then f[bf]=be[bf];o[1]=f;end;if bb>=bc then break end;bb=bb+1;end;end;if j>=p then break end;j=j+1;end;end;end else if z>=50 then if z==51 then t[ba[30]]=(t[ba[18]]*t[ba[6]]);else t[ba[30]]=-t[ba[18]];end else t[ba[30]]=(not(ba[18]==0));end end end end end else if(z==24 or z>24)then if(z>=36)then if(z>=42)then if(z>=45)then if(z<46 or z==46)then if z>45 then t[ba[30]]=k;else t={}end else if not(z~=47)then r=t[ba[30]];else t[ba[30]]=bm(t[ba[18]],c[ba[6]]);end end else if(z<=42)then local e=ba[30]local f,j=bt(t[e](h(t,e+1,ba[18])))n=j+e-1 local j=0;do local e,o=e,n;while true do j=j+1;t[e]=f[j];if e>=o then break end;e=e+1;end;end;else if(z>43)then c[ba[6]]=-c[ba[6]];else local e=t[ba[6]];if e then k=k+1;else t[ba[30]]=e;k=ba[18];end;end end end else if(z<=38)then if(z<36 or z==36)then t[ba[30]]=(c[ba[18]]-t[ba[6]]);else if not(z==38)then n=ba[30];else local e=ba[30]local f={t[e](h(t,e+1,n))};local j=0;do local e,o=e,ba[6];while true do j=(j+1);t[e]=f[j];if e>=o then break end;e=e+1;end;end;end end else if(z==40 or z>40)then if z==40 then do return t[ba[30]]end else t[ba[30]]=(t[ba[18]]-c[ba[6]]);end else d=a[118];end end end else if z>=30 then if(z<32 or z==32)then if(z>=31)then if(z~=32)then else if((c[ba[30]]>c[ba[6]]or c[ba[30]]==c[ba[6]]))then k=k+1;else k=ba[18];end;end else t[ba[30]]=w;end else if(z==33 or z<33)then local a=ba[30]local d,e=bt(t[a](h(t,a+1,n)))n=(e+a-1)local e=0;do local a,f=a,n;while true do e=e+1;t[a]=d[e];if a>=f then break end;a=a+1;end;end;else if not(z==34)then t[ba[30]]=u;else t[ba[30]]=(c[ba[18]]*c[ba[6]]);end end end else if(z>=27)then if(z==27 or z<27)then t[ba[30]]=t[ba[18]][t[ba[6]]];else if z~=29 then t[ba[30]]=c[ba[18]]%c[ba[6]];else l=g('#',...)-1 end end else if z<=24 then t[ba[30]]=t[ba[18]]^c[ba[6]];else if(z~=26)then do return end;else t[ba[30]]=x(c[ba[18]],c[ba[6]]);end end end end end else if(z==11 or z<11)then if(z==5 or z<5)then if(z==2 or z<2)then if(z==1 or z>1)then if(z==2)then local a=ba[30];t[a]=((t[a]or 0))-((t[(a+2)]or 0));k=ba[18];else t[ba[30]]=(not(ba[18]==0));k=k+1;end else local a=ba[30];do return h(t,a,n)end;end else if(z>=4)then if not(z~=5)then local a=b[ba[18]];a[1][a[2]]=t[ba[30]];else if((t[ba[18]]==c[ba[6]]))then k=(k+1);end;end else t[ba[30]]=y(c[ba[18]],c[ba[6]]);end end else if(z==8 or z<8)then if(z<6 or z==6)then if(t[ba[30]]<=c[ba[6]])then k=(k+1);else k=ba[18];end;else if z<8 then r[c[ba[18]]]=t[ba[30]];else t[ba[30]]=c[ba[18]]/t[ba[6]];end end else if(z>=10)then if(z>10)then local a=ba[30]local b,d=bt(t[a](t[(a+1)]))n=(d+a-1)local d=0;do local a,e=a,n;while true do d=(d+1);t[a]=b[d];if a>=e then break end;a=a+1;end;end;else t[ba[30]]=(t[ba[18]]%c[ba[6]]);end else t[ba[30]]=bd(t[ba[18]]);end end end else if(z<17 or z==17)then if(z>=15)then if(z==15 or z<15)then if ba[30]==0 then k=k+ba[18];local a=ba[(k+ba[6])];a[30]=1;ba[30]=1;end else if not(z==17)then if((c[ba[30]]>c[ba[6]]))then k=k+1;else k=ba[18];end;else local a=ba[30];n=a+v-1;do local b,d=a,n;while true do local a=q[(b-a)];t[b]=a;if b>=d then break end;b=b+1;end;end;end end else if z<=12 then t[ba[30]]={};else if z<=13 then if((t[ba[30]]==c[ba[6]]or t[ba[30]]>c[ba[6]]))then k=(k+1);else k=ba[18];end;else end end end else if(z==20 or z<20)then if(z>=19)then if(z>19)then v=l-i+1 else t[ba[30]]=18;end else t[ba[30]][c[ba[18]]]=c[ba[6]];end else if(z<21 or z==21)then for a=0,l do if(a>=i)then q[a-i]=m[a+1];else t[a]=m[(a+1)];end;end;else if(z<=22)then local a=ba[30];local b=t[ba[18]];t[a+1]=b;t[a]=b[c[ba[6]]];else local a=ba t[ba[30]]=function()return a[30]end;end end end end end end end end k=k+1;end;end;end else if 17>s then return cb(bg(),{})();else break end end end end end s=s+1 end end)('77FUS|string.byte,string.char,string.sub,table.concat,math.ldexp,getfenv or function()local a=0 while true do if a>0 then break else return _ENV end a=a+1 end end,setmetatable,select,(unpack or table.unpack),tonumber,next,table.insert,math.floor,(bit and bit.bxor)or(bit32 and bit32.bxor),((bit and bit.bor))or((bit32 and bit32.bor)),((bit and bit.band)or(bit32 and bit32.band)),string.gsub,math.abs,((bit and bit.rshift))or(bit32 and bit32.rshift),((bit and bit.lshift)or(bit32 and bit32.lshift)));
